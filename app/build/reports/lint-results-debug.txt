C:\Users\MartinKokser\.gradle\caches\8.9\transforms\fadfeb0fee1225826625ea873d1bf6b6\transformed\jetified-runtime-release\jars\lint.jar: Warning: Library lint checks reference invalid APIs; these checks will be skipped!

Lint found an issue registry (androidx.compose.runtime.lint.RuntimeIssueRegistry)
which contains some references to invalid API:
org.jetbrains.kotlin.analysis.api.session.KtAnalysisSessionProvider: org.jetbrains.kotlin.analysis.api.lifetime.KtLifetimeTokenFactory getTokenFactory()
(Referenced from androidx/compose/runtime/lint/AutoboxingStateCreationDetector.class)

Therefore, this lint check library is not included
in analysis. This affects the following lint checks:
AutoboxingStateValueProperty
AutoboxingStateCreation
CoroutineCreationDuringComposition
FlowOperatorInvokedInComposition
ComposableLambdaParameterNaming
ComposableLambdaParameterPosition
ComposableNaming
StateFlowValueCalledInComposition
CompositionLocalNaming
MutableCollectionMutableState
ProduceStateDoesNotAssignValue
RememberReturnType
OpaqueUnitKey
UnrememberedMutableState

To use this lint check, upgrade to a more recent version
of the library. [ObsoleteLintCustomCheck]

   Explanation for issues of type "ObsoleteLintCustomCheck":
   Lint can be extended with "custom checks": additional checks implemented by
   developers and libraries to for example enforce specific API usages
   required by a library or a company coding style guideline.

   The Lint APIs are not yet stable, so these checks may either cause a
   performance degradation, or stop working, or provide wrong results.

   This warning flags custom lint checks that are found to be using obsolete
   APIs and will need to be updated to run in the current lint environment.

   It may also flag issues found to be using a newer version of the API,
   meaning that you need to use a newer version of lint (or Android Studio or
   Gradle plugin etc) to work with these checks.

C:\Projects\Hobby\markus-clock\app\build.gradle.kts:14: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk = 34
        ~~~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application runs on a version of Android that is more recent than
   your targetSdkVersion specifies that it has been tested with, various
   compatibility modes kick in. This ensures that your application continues
   to work, but it may look out of place. For example, if the targetSdkVersion
   is less than 14, your app may get an option button in the UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

C:\Projects\Hobby\markus-clock\app\build.gradle.kts:58: Warning: A newer version of androidx.core:core-ktx than 1.12.0 is available: 1.15.0 [GradleDependency]
    implementation("androidx.core:core-ktx:1.12.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:59: Warning: A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.7.0 is available: 2.8.7 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.7.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:60: Warning: A newer version of androidx.activity:activity-compose than 1.8.2 is available: 1.10.1 [GradleDependency]
    implementation("androidx.activity:activity-compose:1.8.2")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:61: Warning: A newer version of androidx.compose.ui:ui than 1.6.1 is available: 1.7.8 [GradleDependency]
    implementation("androidx.compose.ui:ui:1.6.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:62: Warning: A newer version of androidx.compose.ui:ui-graphics than 1.6.1 is available: 1.7.8 [GradleDependency]
    implementation("androidx.compose.ui:ui-graphics:1.6.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:63: Warning: A newer version of androidx.compose.ui:ui-tooling-preview than 1.6.1 is available: 1.7.8 [GradleDependency]
    implementation("androidx.compose.ui:ui-tooling-preview:1.6.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:64: Warning: A newer version of androidx.compose.material3:material3 than 1.2.1 is available: 1.3.1 [GradleDependency]
    implementation("androidx.compose.material3:material3:1.2.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:65: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-compose than 2.7.0 is available: 2.8.7 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:70: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.2.1 [GradleDependency]
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:71: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.6.1 [GradleDependency]
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:72: Warning: A newer version of androidx.compose.ui:ui-test-junit4 than 1.6.1 is available: 1.7.8 [GradleDependency]
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.6.1")
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:75: Warning: A newer version of androidx.compose.ui:ui-tooling than 1.6.1 is available: 1.7.8 [GradleDependency]
    debugImplementation("androidx.compose.ui:ui-tooling:1.6.1")
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\build.gradle.kts:76: Warning: A newer version of androidx.compose.ui:ui-test-manifest than 1.6.1 is available: 1.7.8 [GradleDependency]
    debugImplementation("androidx.compose.ui:ui-test-manifest:1.6.1")
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Projects\Hobby\markus-clock\app\src\main\AndroidManifest.xml:19: Warning: Expecting android:screenOrientation="unspecified" or "fullSensor" for this activity so the user can use the application in any orientation and provide a great experience on Chrome OS devices [LockedOrientationActivity]
            android:screenOrientation="portrait">
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "LockedOrientationActivity":
   The <activity> element should not be locked to any orientation so that
   users can take advantage of the multi-window environments and larger
   screens available on Android. To fix the issue, consider declaring the
   corresponding activity element with `screenOrientation="unspecified"or
   "fullSensor"` attribute.

   https://developer.android.com/topic/arc/window-management

C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:3: Warning: The resource R.color.purple_200 appears to be unused [UnusedResources]
    <color name="purple_200">#FFBB86FC</color>
           ~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:4: Warning: The resource R.color.purple_500 appears to be unused [UnusedResources]
    <color name="purple_500">#FF6200EE</color>
           ~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:5: Warning: The resource R.color.purple_700 appears to be unused [UnusedResources]
    <color name="purple_700">#FF3700B3</color>
           ~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:6: Warning: The resource R.color.teal_200 appears to be unused [UnusedResources]
    <color name="teal_200">#FF03DAC5</color>
           ~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:7: Warning: The resource R.color.teal_700 appears to be unused [UnusedResources]
    <color name="teal_700">#FF018786</color>
           ~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:8: Warning: The resource R.color.black appears to be unused [UnusedResources]
    <color name="black">#FF000000</color>
           ~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:9: Warning: The resource R.color.white appears to be unused [UnusedResources]
    <color name="white">#FFFFFFFF</color>
           ~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:10: Warning: The resource R.color.play_primary appears to be unused [UnusedResources]
    <color name="play_primary">#FFFF4081</color>
           ~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:11: Warning: The resource R.color.play_secondary appears to be unused [UnusedResources]
    <color name="play_secondary">#FFAA00FF</color>
           ~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:12: Warning: The resource R.color.sleep_primary appears to be unused [UnusedResources]
    <color name="sleep_primary">#FF3D5AFE</color>
           ~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\colors.xml:13: Warning: The resource R.color.sleep_secondary appears to be unused [UnusedResources]
    <color name="sleep_secondary">#FF00B0FF</color>
           ~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\drawable\stars_background.xml:2: Warning: The resource R.drawable.stars_background appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Projects\Hobby\markus-clock\app\src\main\res\values\strings.xml:4: Warning: The resource R.string.play appears to be unused [UnusedResources]
    <string name="play">Play</string>
            ~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\strings.xml:5: Warning: The resource R.string.sleep appears to be unused [UnusedResources]
    <string name="sleep">Sleep</string>
            ~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\strings.xml:7: Warning: The resource R.string.time_format appears to be unused [UnusedResources]
    <string name="time_format">%02d:%02d</string>
            ~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\strings.xml:8: Warning: The resource R.string.select_activity appears to be unused [UnusedResources]
    <string name="select_activity">Select activity</string>
            ~~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\strings.xml:9: Warning: The resource R.string.set_duration appears to be unused [UnusedResources]
    <string name="set_duration">Set duration (minutes)</string>
            ~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\strings.xml:10: Warning: The resource R.string.set_time_range appears to be unused [UnusedResources]
    <string name="set_time_range">Set Time Range</string>
            ~~~~~~~~~~~~~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\values\strings.xml:13: Warning: The resource R.string.ok appears to be unused [UnusedResources]
    <string name="ok">OK</string>
            ~~~~~~~~~
C:\Projects\Hobby\markus-clock\app\src\main\res\drawable\toys_background.xml:2: Warning: The resource R.drawable.toys_background appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

C:\Projects\Hobby\markus-clock\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
C:\Projects\Hobby\markus-clock\app\src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

C:\Projects\Hobby\markus-clock\app\src\main\res: Warning: Missing density variation folders in src\main\res: drawable-hdpi, drawable-mdpi, drawable-xhdpi [IconMissingDensityFolder]

   Explanation for issues of type "IconMissingDensityFolder":
   Icons will look best if a custom version is provided for each of the major
   screen density classes (low, medium, high, extra-high, extra-extra-high).
   This lint check identifies folders which are missing, such as
   drawable-hdpi.

   Low density is not really used much anymore, so this check ignores the ldpi
   density. To force lint to include it, set the environment variable
   ANDROID_LINT_INCLUDE_LDPI=true. For more information on current density
   usage, see https://developer.android.com/about/dashboards

   https://developer.android.com/guide/practices/screens_support.html

0 errors, 39 warnings
